@page "/"
@using System.Text.RegularExpressions;

<PageTitle>Home</PageTitle>

<MudTextField T="string" Label="Text Box" Variant="Variant.Text" Immediate="true" ValueChanged="@((args) => UpdateText(args))" AutoGrow MaxLines="10" />
<MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@Disabled">Submit</MudButton><br>
Word Count: @WordCount <br>
Sentence Count: @SentenceCount <br>
Paragraph Count: @ParagraphCount <br>
@* render alerts when the button is pressed and something is wrong e.g. no text in x field.
render alert when successful.
have the text fields side-by-side in the future.
have a list of details below that are only rendered once the button is pressed (they don't appear with no values).
*@
@*
On a carousel:
1) basic stats (word count, sentence count, paragraph count, top 5 most common words (excluding a/the/etcetc) - offer a drop down list of all words, estimated reading time)
2) line chart of words per sentence, plus average
3) bar chart of frequency of words with n letters (1,2,3...), plus average word length
4) bar chart of paragraph length in sentences, plus average
5) WHAT ELSE WOULD BE USEFUL FOR STUDENTS/ESSAY WRITERS/ETC

maybe have some functions such as *replace all instances of this word with that word* 
*@
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br />


@code {
    private string Text {get;set;} = "";
    private MatchCollection? Words {get;set;}
    private MatchCollection? Sentences {get;set;}
    private MatchCollection? Paragraphs {get;set;}
    private bool Disabled {get;set;} = false;
    private int WordCount {get;set;} = 0;
    private int SentenceCount {get;set;} = 0;
    private int ParagraphCount {get;set;} = 0;
    private void UpdateText(string inputString)
    {
        if (inputString == null)
            return;
        Words = Regex.Matches(inputString, @"\w+");
        WordCount = Words.Count;
        Sentences = Regex.Matches(inputString + " ", @"[^\.!?]*[\.!?]+\s"); //this doesn't work when a number/source is appended to the punctuation mark e.g. from a thesis
        SentenceCount = Sentences.Count;
        Paragraphs = Regex.Matches(inputString + "\n", @".*\n"); //THIS IS CURRENTLY ALSO USING EMPTY LINES - FIX THIS
        ParagraphCount = Paragraphs.Count;
    }
}